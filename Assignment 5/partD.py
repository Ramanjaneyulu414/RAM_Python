# -*- coding: utf-8 -*-
"""Untitled21.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DYStqWSbuiEIXOZR-OXYjF-6oTmNArWj
"""



# Task 3: Prime number checker
def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            return False
    return True

# Testing prime function
print("\nIs 7 prime?", is_prime(7))
print("Is 15 prime?", is_prime(15))
print("Is 2 prime?", is_prime(2))

import pandas as pd
import matplotlib.pyplot as plt

# Step 1: Load dataset (use latin1 encoding for this file)
df = pd.read_csv("sales_data_sample.csv", encoding="latin1")

# Step 2: Clean missing values (drop rows where key columns are missing)
df_clean = df.dropna(subset=["QUANTITYORDERED", "PRICEEACH", "ORDERDATE"])

# Step 3: Create new column TotalAmount = Quantity Ã— Price
df_clean["TotalAmount"] = df_clean["QUANTITYORDERED"] * df_clean["PRICEEACH"]

# Step 4: Group data by Product and calculate total revenue per product
revenue_per_product = df_clean.groupby("PRODUCTCODE")["TotalAmount"].sum().reset_index()

print("Revenue per Product:")
print(revenue_per_product.head())

# Step 5: Find the month with the highest sales
sales_per_month = df_clean.groupby(["YEAR_ID", "MONTH_ID"])["TotalAmount"].sum().reset_index()
best_month = sales_per_month.loc[sales_per_month["TotalAmount"].idxmax()]
print("\nMonth with Highest Sales:")
print(best_month)

import pandas as pd
import matplotlib.pyplot as plt

# Load dataset
df = pd.read_csv("sales_data_sample.csv", encoding="latin1")

# Clean missing values
df_clean = df.dropna(subset=["QUANTITYORDERED", "PRICEEACH", "ORDERDATE"])

# Create TotalAmount column
df_clean["TotalAmount"] = df_clean["QUANTITYORDERED"] * df_clean["PRICEEACH"]

# Group revenue per product
revenue_per_product = df_clean.groupby("PRODUCTCODE")["TotalAmount"].sum().reset_index()

# Group sales per month
sales_per_month = df_clean.groupby(["YEAR_ID", "MONTH_ID"])["TotalAmount"].sum().reset_index()

# ---------- Visualization ---------- #

# 1. Bar Chart: Revenue per Product
plt.figure(figsize=(12,6))
plt.bar(revenue_per_product["PRODUCTCODE"], revenue_per_product["TotalAmount"], color="skyblue")
plt.xticks(rotation=90)
plt.title("Total Revenue per Product")
plt.xlabel("Product Code")
plt.ylabel("Revenue")
plt.show()

# 2. Line Chart: Monthly Sales Trends
plt.figure(figsize=(10,5))
plt.plot(sales_per_month["MONTH_ID"].astype(str) + "-" + sales_per_month["YEAR_ID"].astype(str),
         sales_per_month["TotalAmount"], marker="o", linestyle="-", color="green")
plt.xticks(rotation=90)
plt.title("Monthly Sales Trends")
plt.xlabel("Month-Year")
plt.ylabel("Total Sales")
plt.show()

# 3. Pie Chart: % Contribution of Each Product
plt.figure(figsize=(8,8))
plt.pie(revenue_per_product["TotalAmount"],
        labels=revenue_per_product["PRODUCTCODE"],
        autopct="%1.1f%%", startangle=140)
plt.title("Percentage Contribution of Each Product to Total Sales")
plt.show()

# 4. Scatter Plot: Quantity vs TotalAmount
plt.figure(figsize=(8,6))
plt.scatter(df_clean["QUANTITYORDERED"], df_clean["TotalAmount"], alpha=0.5, color="red")
plt.title("Quantity vs Total Amount")
plt.xlabel("Quantity Ordered")
plt.ylabel("Total Amount")
plt.show()